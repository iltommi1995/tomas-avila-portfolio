{"version":3,"sources":["components/organisms/slideContent.js","components/organisms/slideContent2.js","components/organisms/header.js","components/templates/whoIAm/whoIAm.js","components/templates/projects/projects.js","components/templates/hobbies/hobbies.js","App.js","serviceWorker.js","index.js"],"names":["SlideContent","props","Background","process","path","className","subTitle","text","style","backgroundImage","title","developed","Header","useState","nome","mobileNav","setMobileNav","to","id","onClick","WhoIAm","src","href","target","Slider","sliderArr","x","setX","goTo","event","value","parseInt","map","item","index","transform","length","Hobbies","App","prova","setProva","class","exact","component","Projects","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3a7ba94f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport default function SlideContent(props) {\r\n    let Background = process.env.PUBLIC_URL + props.path\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"slide-content-text\">\r\n                <h1 className=\"slide-title\">{props.subTitle}</h1>\r\n                <p className=\"slide-paragraph\">{props.text} </p>\r\n            </div>\r\n            <div className=\"slide-content-image\" style={{ backgroundImage: `url(${Background})` }}>\r\n                <h2>\r\n                    {props.title}\r\n                </h2>\r\n                <p>Developed with: {props.developed}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport default function SlideContent(props) {\r\n    let Background = process.env.PUBLIC_URL + props.path\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"slide-content-text-2\">\r\n                <h1 className=\"slide-title-2\">{props.title}</h1>\r\n                <p className=\"slide-paragraph-2\">Cras ac mi diam. Donec condimentum eget\r\n                egestas. Nam diam eros, convallis quis justo in,\r\n                pellentesque arcu convallis quis justo in, dictum.\r\nAenean vehicula accumsan rhoncus. as </p>\r\n            </div>\r\n            <div className=\"slide-content-image-2\" style={{ backgroundImage: `url(${Background})` }}>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./header.css\";\r\n\r\nexport default function Header(props) {\r\n    const [mobileNav, setMobileNav] = useState(props.nome);\r\n\r\n    const openMobileNav = function () {\r\n        setMobileNav(\"mobile-nav-active\")\r\n    }\r\n    const closeMobileNav = function () {\r\n        setMobileNav(\"\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header-logo\">\r\n                Tomàs Avila\r\n            </div>\r\n            <div className=\"header-nav\">\r\n                <Link className=\"nav-link\" to=\"/tomas-avila-portfolio\">Who i am</Link>\r\n                <Link className=\"nav-link\" to=\"/projects\">Projects</Link>\r\n                <Link className=\"nav-link\" to=\"/hobbies\">Hobbies</Link>\r\n            </div>\r\n            <div className=\"toggler-container\">\r\n                <div id=\"mobile-toggler\" onClick={openMobileNav}></div>\r\n            </div>\r\n            <div className={\"mobile-nav \" + mobileNav}>\r\n                <div className=\"close-nav\" onClick={closeMobileNav}></div>\r\n                <div className=\"mobile-nav-links\">\r\n                    <Link className=\"nav-link\" to=\"/tomas-avila-portfolio\">Who i am</Link>\r\n                    <Link className=\"nav-link\" to=\"/projects\">Projects</Link>\r\n                    <Link className=\"nav-link\" to=\"/hobbies\">Hobbies</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from \"react\";\r\n\r\nimport \"./whoIAm.css\"\r\n\r\nexport default function WhoIAm(props) {\r\n\r\n    let MyImage = process.env.PUBLIC_URL + \"/img/my_image.jpg\"\r\n\r\n    return (\r\n        <div className=\"who-i-am-container\">\r\n            <div className=\"my-image-container\">\r\n                <div className=\"my-image\" style={{ backgroundImage: `url(${MyImage})` }}></div>\r\n            </div>\r\n            <div className=\"my-name\">\r\n                <h1>Tomàs Daniel Avila Visintin</h1>\r\n            </div>\r\n            <div className=\"my-description\">\r\n                <p>I'm a frontend web developer, actually working for Italfrigo Srl.<br />I want to become a full stack developer and i'm now trying to learn backend stuff.</p>\r\n            </div>\r\n            <div className=\"my-skills\">\r\n                <p>My skills:</p>\r\n                <div className=\"my-skills-icons\">\r\n                    <img src=\"https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/html/html.png\" />\r\n                    <img src=\"https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/css/css.png\" />\r\n                    <img src=\"https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/javascript/javascript.png\" />\r\n                    <img src=\"https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/react/react.png\" />\r\n                    <img src=\"https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/git/git.png\" />\r\n                    <img src=\"https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/graphql/graphql.png\" />\r\n                </div>\r\n                <div className=\"my-socials\">\r\n                    <p>My socials:</p>\r\n                    <div className=\"my-social-icons\">\r\n                        <a href=\"https://www.linkedin.com/in/tom%C3%A0s-daniel-avila-visintin-2b5497170/\" target=\"_blank\"><img src={process.env.PUBLIC_URL + \"/img/social_icons/linkedin.png\"} /></a>\r\n                        <a href=\"https://www.facebook.com/tomas.avila.315/\" target=\"_blank\"><img src={process.env.PUBLIC_URL + \"/img/social_icons/facebook.png\"} /></a>\r\n                        <a href=\"https://www.instagram.com/tomasavila1995/\" target=\"_blank\"><img src={process.env.PUBLIC_URL + \"/img/social_icons/instagram.png\"} /></a>\r\n                        <a href=\"https://www.youtube.com/channel/UCM9VcbN0xkcJERMXiS5RH-Q\" target=\"_blank\"><img src={process.env.PUBLIC_URL + \"/img/social_icons/youtube.png\"} /></a>\r\n                        <a href=\"https://open.spotify.com/user/1172080907?si=dt2JobNkQkCXAsxBxP9wJg\"><img src={process.env.PUBLIC_URL + \"/img/social_icons/spotify.png\"} /></a>\r\n                        <a href=\"https://letterboxd.com/ilTommi/\" target=\"_blank\"><img src={process.env.PUBLIC_URL + \"/img/social_icons/letterboxd.png\"} /></a>\r\n                        <a href=\"https://www.goodreads.com/user/show/108154736-tom-s-avila\" target=\"_blank\"><img src={process.env.PUBLIC_URL + \"/img/social_icons/goodreads.png\"} /></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport SlideContent from '../../organisms/slideContent';\r\nimport SlideContent2 from '../../organisms/slideContent2';\r\nimport '../../../App.css'\r\n\r\nexport default function Slider(props) {\r\n\r\n    let sliderArr = [<SlideContent title=\"Cinema site\" path=\"/img/position_1.png\" developed=\"React, html 5, css 3, Java Script\" text=\"Site made using React. It's the first project i developed with React, for an university course.\" />, <SlideContent2 title=\"Slide 2\" path=\"/img/position_2.png\" />, <SlideContent2 title=\"Slide 3\" path=\"/img/position_3.png\" />, <SlideContent title=\"Slide 4\" path=\"/img/position_4.png\" />, <SlideContent title=\"Slide 5\" path=\"/img/position_1.png\" />]\r\n\r\n\r\n\r\n    const [x, setX] = useState(0)\r\n\r\n\r\n    const goUp = () => {\r\n        x === 0 ? setX(-100 * (sliderArr.length - 1)) : setX(x + 100);\r\n    }\r\n\r\n    const goDown = () => {\r\n        x === -100 * (sliderArr.length - 1) ? setX(0) : setX(x - 100)\r\n\r\n    }\r\n\r\n    const goTo = (event) => {\r\n        let value = parseInt(event.target.id) * 100\r\n        setX(100 - value)\r\n    }\r\n\r\n    const newFunc = (KeyboardEvent) => {\r\n        console.log(\"probva \" + KeyboardEvent.key)\r\n        /*if (KeyboardEvent.key = \"KeyUp\") {\r\n            x === 0 ? setX(-100 * (sliderArr.length - 1)) : setX(x + 100);\r\n        }*/\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"slider\">\r\n            {\r\n                sliderArr.map((item, index) => {\r\n                    return (\r\n                        <div className=\"slide\" style={{\r\n                            transform: `translateY(${x}%)`\r\n                        }}>\r\n                            {item}\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            <div id=\"go-up\" onClick={goUp}>\r\n                <img src={process.env.PUBLIC_URL + \"/img/arrow_up.png\"} />\r\n            </div>\r\n            <div id=\"go-down\" onClick={goDown}>\r\n                <img src={process.env.PUBLIC_URL + \"/img/arrow_down.png\"} />\r\n            </div>\r\n            <div id=\"slide-count\">\r\n                <div className={x === 0 ? 'rounded-selector rounded-selector-active' : 'rounded-selector'} id=\"1\" onClick={goTo} ></div>\r\n                <div className={x === -100 ? 'rounded-selector rounded-selector-active' : 'rounded-selector'} id=\"2\" onClick={goTo} ></div>\r\n                <div className={x === -200 ? 'rounded-selector rounded-selector-active' : 'rounded-selector'} id=\"3\" onClick={goTo} ></div>\r\n                <div className={x === -300 ? 'rounded-selector rounded-selector-active' : 'rounded-selector'} id=\"4\" onClick={goTo} ></div>\r\n                <div className={x === -400 ? 'rounded-selector rounded-selector-active' : 'rounded-selector'} id=\"5\" onClick={goTo} ></div>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}","import React, { useState } from \"react\";\r\n\r\nexport default function Hobbies(props) {\r\n    return (<div>My Hobbies</div>);\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport \"./App.css\";\r\nimport Slider from './components/organisms/slider';\r\nimport Header from './components/organisms/header';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport WhoIAm from \"./components/templates/whoIAm/whoIAm\"\r\nimport Projects from \"./components/templates/projects/projects\"\r\nimport Hobbies from \"./components/templates/hobbies/hobbies\"\r\n\r\nexport default function App() {\r\n\r\n  const [prova, setProva] = useState(\"\");\r\n\r\n  const chiudiNav = function () {\r\n    setProva(\"mobile-nav-active\")\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div class=\"container\" onClick={chiudiNav}>\r\n      <Header nome={prova} />\r\n      <Switch>\r\n        <Route exact path=\"/tomas-avila-portfolio\" component={WhoIAm} />\r\n        <Route path=\"/projects\" component={Projects} />\r\n        <Route path=\"/hobbies\" component={Hobbies} />\r\n      </Switch>\r\n    </div>\r\n  )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}